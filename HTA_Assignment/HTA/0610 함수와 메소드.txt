함수 -> 입력?을 받아서 작업을 수행하고 결과를 반환? 하는 것
메소드 -> 객체에 포함된 함수

함수 실행	(자바에는 존재 x)
	abc();

메소드 실행
	var x = new X()
	x.abc();

ㅇ 자바의 메소드
	접근제한자 반환타입 메소드명(매개변수타입 매개변수이름) {
		수행문;
		return 반환값;
	}
	
	변수	: 기본자료형값, 객체
	매개변수 	: 기본자료형값, 객체
	반환값 	: 기본자료형값, 객체

	* 메소드를 변수에 담을 수 없다.	
	* 메소드를 매개변수로 전달할 수 없다.
	* 메소드를 반환값으로 사용할 수 없다.


ㅇ 자바스크립트의 함수 (자바스크립트의 모든 함수는 반환값이 있다) _w3shoolcs.com의 javascript 레퍼런스에서 함수 확인 가능하다
	function 함수명(매개변수명){		// 접근제한자 없음, 반환타입 없음, 매개변수타입 없음 // 어차피 var이기 때문에 생략됨
		수행문;
		return 반환값;
	}
	function 함수명(매개변수명){		// 리턴문이 없는 함수는 undefined를 반환한다. (ex. console.log('aaa') 는 undefined를 반환한다.)
		수행문;
	}

	* 함수를 변수에 담을 수 있다.
	* 함수를 매개변수로 전달할 수 있다.
	* 함수를 반환값으로 사용할 수 있다.
	* script 태그속의 함수를 먼저 읽어들이기 때문에 선언 위치와는 상관이 없다.


ㅇ 전역/지역변수
var없이 선언하게 되면 전역변수로 선언이 되지만, 함수 내부에서 선언하는 행위는 절대 하지 말것


ㅇ 변수 끌어올리기(변수 호이스팅)
변수 끌어올리기
	- 함수내에서 선언된 모든 지역변수는 그 변수의 선언위치와 상관없이 
	  함수의 첫번째 수행문보다 앞으로 끌어올려진다.

	- 자바스크립트에서 지역변수의 스코프(사용범위)는 함수다.
	// 실행 시 함수의 블록의 맨 위로 
	var 변수명, var 변수명 형태로 끌어올려지고 실제 선언 위치에는 
	변수명 = value의 형태로 바뀐다

	- 타입 자리에 var대신 let이 붙으면 호이스팅이 일어나지 않으며,
	  변수 범위가 {} 으로 제한됨
	
ㅇ 이름없는 함수
function plus(x, y){
	return x+y;
}

var a = plus;		plus가 참조하는 함수가 a에 대입된다.
var b = plus();		plus() 실행한 결과가 b에 대입된다. (NaN 반환, 산술연산 불가한데 산술연산한 경우)
var c = plus(10, 2);		plus(10,2) 실행한 결과가 c에 대입된다.

ㅇ 즉시실행 함수
페이지 실행시 바로 실행되는 함수
즉시 실행함수 정의하기
	- 즉시 실행함수는 페이지 로딩시 함수가 자동으로 실행되게 한다.
	 (function(){	-> 함수명을 선언하지 않음으로써 변수명을 오염할 위험을 제거해준다.
		
	 })();	
즉시 실행함수의 장점
	- 단 한번만 실행된다. (절대로 여러 번 실행할 수 없다)
	- 전역 이름공간을 오염시키지 않는다.

즉시 실행함수의 사용 목적
	- 웹페이지의 초기화
	- 웹페이지에서 사용할 초기 데이터를 서버로부터 가져오는 작업