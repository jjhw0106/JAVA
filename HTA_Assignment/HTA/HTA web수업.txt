부트스트랩 프레임워크
div - row - col로 틀을 잡은 후 개발을 진행함

JSP 환경설정
1. APACHE.ORG -> TOMCAT -> DOWNLOAD -> 10버전으로 다운로드(32/64BIT 윈도우 서비스) ->
HOST MANAGER, EXAMPLES 체크 ->서버 80으로 변경,  service name : tomcat10으로 변경, 이름,비번 입력

web server와 web Application Server는 다르다
WAS: 웹어플리케이션 프로그램을 실행해주는 파일이 반드시 필요하다
자바의 WAS = JSP


ㅇ url형식
http://jhta.co.kr/page/edu/view.php?type=1&id=179
HTTP: 프로토콜
jhta.co.kr: 호스트명, 서버명, 도메인네임
/page/edu/view.php : 실제 자원의 위치
?뒤 : Query String


웹페이지와 웹 어플리케이션
ㅇ웹페이지
- 정적 자원 제공(정적 html)
- 미리 작성해둔 html문서가 응답으로 제공
ㅇ웹 어플리케이션
- 동적 자원(동적 html 컨텐츠)제공
- 동적 웹 컨텐츠를 제공하는 프로그램(Servlet/jsp)이다.


jsp파일의 실행순서(jsp는 자바코드로 변환 후 실행되며, 변환은 tomcat에서 알아서 해준다)
객체의 생성, 유지관리, 폐기 모두 tomcat이 수행해주며 이러한 기능을 수행하는 것을 Container라고 부른다.


1. 브라우저가 서버에 요청 URL을 보낸다
	http://localhost/sample/hello.jsp

2. 서버는 요청 URL을 분석해서 hello.jsp를 찾는다
	Tomcat 10.0/wtpwebapps/sample/hello.jsp를 발견

3. 서버는 hello.jsp에 대한 자바 실행파일을 찾는다.
	Tomcat 10.0/work/Catalina/localhost/sample/org/apache/jsp/hello_jsp.class를 찾는다
	1. hello_jsp.class가 없으면
		hello.jsp를 자바코드로 변환해서 hello_jsp.java 파일을 생성한다.
		hello_jsp.java를 컴파일해서 실행파일 hello_jsp.class 파일을 생성한다. 
		hello_jsp.class(설계도)를 메모리에 로딩한다.
	2. hello_jsp.class가 있으면  
		hello_jsp.class(설계도)를 메모리에 로딩한다.

4. hello_jsp.class로 객체를 생성하고 생성된 객체의 기본 생성자 메소드를 실행한다.
	* 기본 생성자 메소드는 객체의 초기화 작업을 수행하지 않음

5. 생성된 객체의 _jspInit() 메소드를 실행해서 객체의 초기화 작업을 수행한다.

6. 생성된 객체의 _jspService(HttpServletRequest request, HttpServletResponse response) 메소드를 실행한다.
	* _jspService(req,res) 메소드는 클라이언트의 요청을 처리하고, 동적 HTML 컨텐츠를 응답으로 제공한다.
	* hello.jsp파일의 내용이 변경되지 않으면 생성된 객체는 웹서버에서 계속 유지된다.
	* 클라이언트로부터 hello.jsp에 대한 요청을 받으면 6번 작업을 계속 반복한다.
	* _jspService(req,res) 메소드 실행 중 오류가 발생하면 
	- 500 : 자바 코드가 이상할 떄
	- 404 : url 잘못입력(400번대는 클라이언트의 요청실수)

7. hello.jsp의 내용이 변경되면 생성된 객체의 _jspDestroy() 메소드를 실행한 후 객체를 제거한다.
	* 변경된 hello.jsp를 새로 요청하면 3~5번작업을 다시 실행한다.
	* 5번 까지의 작업이 완료되면 다시 6번작업을 실행해서 클라이언트의 요청을 처리한다.





디렉티브(지시어)
- jsp 페이지에 대한 설정 정보를 정의한다
<%@ page  	%> jsp 페이지에 대한 정보를 설정한다
<%@ include  	%> jsp 페이지가 포함하는 다른 JSP페이지를 정의한다
<%@ taglib  	%> jsp 페이지가 사용할 태그라이브러리를 정의한다

선언문 		<%! 선언 %> 	인스턴스 변수, 메서드, 클래스 정의
스크립틀릿 	<%스크립틀릿%> 	로컬변수, 반복문, 객체조작, 산술 연산 등
식 		<%=식%> 	출력

스크립틀릿
- jsp 페이지내에 