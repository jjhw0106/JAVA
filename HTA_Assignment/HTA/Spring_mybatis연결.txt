
====1====
1. pom.xml에 mybatis.jar, mybatis-spring.jar 라이브러리 추가하기(dependency)
2. mapper 인터페이스를 만들어야 한다(dao의 mapper버전)
	- crud관련 메소드
3. mapper파일을 만들어야 한다(SQL문이 정의되어있는 파일, mapper 인터페이스 하나 - mapper 파일 하나) => 개발자들의 주요 업무
4. spring bean configuration 파일(context)에 와서 connection pool 객체를 가져온다
5. spring과 mybatis를 연결한다 => mybatis의 핵심객체를 스프링의 빈으로 등록한다.
	- sqlSessionFactory를 스프링의 빈으로 등록 (-> sqlSessionFactory는 객체 생성에 여러단계가 필요하여 sqlSessionFactoryBean클래스(mybatis-spring.jar제공)의 getObject()메소드를
	  를 통해 sqlSessionFactory를 얻음
	   * spring과 mybatis의 연결에서는 mybatis 환경설정파일에는 db연결 정보가 없다 (because. connection pool객체를 통해 db와 연결하기 때문)
	   * sqlSession객체를 등록할 때 p:dataSource-ref ="dataSource"를 주입하여 db와 연결한다.
	   * p:configLocation => 값(String 등)을 주입할 떄, p:configLocation-ref => 객체를 주입할 떄
===> sqlSessionFactoryBean이 등록되면, sqlSession 제공, mybatis 환경설정정보 등을 갖고 있음, 

====2====
1. 인터페이스만 생성하면 구현객체는 MapperScannerConfigurer가 대신 구현해준다. (mybatis의 반복적 코드를 생략하게 해준다.)
2. MapperScannerConfigurer는 mapper인터페이스가 어디있는지만 알면된다. 
	-> <mybatis-spring:scan base-package = "com.sample.mapper"로 위치를 알려준다
	-> 인터페이스에 대한 구현객체를 만들려면 session.getMapper()를 호출해야 한다. 때문에 sqlSession을 획득해야한다 (sqlSessionFactory가 제공)


spring-mybatis 연동하기	
	1. mybatis-버전.jar, mybatis-spring-버전.jar 라이브러리 의존성을 pom.xml에 추가
		mybatis.jar : SQl Mapper Framework
		mybatis-spring.jar : mybatis와 spring framework의 연동을 지원
	2. 매퍼 인터페이스 정의하기
		테이블에 대한 CRUD 작업을 정의한 인터페이스이다.
		작성예) 
			package com.sample.dao;
			public interface UserMapper{
				void insertUser(User user);
				void updateUser(User user);
				void getUserById(String userId);
			}
			* DAO 클래스에 대한 인터페이스 버전이다.

	3. 매퍼 파일 정의하기
		CRUD작업에 대한 SQL을 정의한 xml 파일이다.
		작성예)
			users.xml
			<mappers namespace="com.sample.dao.UserMapper">	// 매퍼 인터페이스의 전체이름이 들어와야한다.
				<insert id = "insertUser" parameterType = "com.sample.vo.User">
					SQL 작성
<				</insert>
				<update id="updateUser" parameterType = "com.sample.vo.User">
					SQL 작성
				</update>
				<select id = "getUserById" parameterType = "string" resultType = "com.sample.User">
					SQL작성
				</select>
			</mappers>

	4. mybatis-config.xml 파일 정의
		mybatis 환경설정 정보를 정의하는 파일이다.
	5. spring과 mybatis 연동시키기
		- SqlSessionFactory를 스프링 컨테이너의 빈으로 등록하기
			SqlSessionFactory와 SqlSession을 제공하는 객체다.
		- MapperScannerConfigurer를 스프링 컨테이너의 빈으로 등록한다
			매퍼 인터페이스에 대한 구현객체를 생성하고, 그 객체를 스프링 컨테이너에 포함시킨다
myBatis의 주요 API
	SqlSessionFactoryBuilder 	-mybatis의 핵심 객체인 SqlSessionFactory를 생성한다
	SqlSessionFactory		- SqlSession(CRUD 기능 지원)을 제공한다.
	SqlSession		- CRUD기능을 제공한다()
	Mapper 인터페이스	- 테이블에 대한 CRUD 기능이 정의된 인터페이스다
	Mapper 파일		- 테이블을 대상으로 실행할 SQL 이 정의된 파일이	
	Mapper 인스턴스		- SqlSession이 Mapper인터페이스와 Mapper 파일을 이용
				  Mapper 인터페이스의 구현객체를 생성하고, 스프링의 빈으로 등록한다.





