오라클 id: eungsulee@naver.com
        pw: Zxcv1234

Oracle 설치주소: oracle.com/database/technologies/xe-prior-releases.html
Oracle Developer 설치주소: https://www.oracle.com/database/technologies/appdev/sqldeveloper-landing.html


오라클이 제공하는 샘플계정(hr) 활성화
 - conn system/zxcv1234
 - alter user hr account unlock;		->hr 계정 활성화
 - alter user hr identified by zxcv1234;	->hr 계정 비밀번호를 zxcv1234로 변경

hr 계정 접속 테스트
 - conn hr/zxcv1234
 - connected가 출력되면 정상

hr계정의 테이블 조회하기
 - select * from tabs;

날짜 형식 설정 
도구 - 환경설정 - 데이터베이스 - nls
날짜 형식 부분 yyyy/mm/dd hh24:m1:ss
입력
**=======================JDBC(java < => DB연결)==================================
jdbc 설치 후 클래스패스 -> libraries에서 jdbc설치된 폴더의 ojdbc6.jar파일 add하기

DBMS 개발사 : ORACLE, MSSQL, MYSQL 등등
JDBC : 자바 개발자들이 만들어 놓음

JDBC를 통해 오라클과 연결이 되면 오라클(마소, 등등 모든 dbms제조사)에서 Connection 객체를 제공해준다.
즉 어떤 데이터베이스를 쓰든 똑같은 방법으로 사용 가능하다.
connection으로 dbms와 연결하면 sql을 삽입할 수 있다.

java에서 insert를하면 db에 바로 접근가능하지만
SQLDeveloper에서 행을 추가한 경우 Commit을 해주어야 DB에 반영된다.

1. jdbc드라이버를 메모리에 로딩하기
2. dbms와 연결하고, connection 구현객체 획득하기
3. PreparedStatement 구현객체 획득하기
4. 값 바인딩하기 
5. SQL 구문을 DBMS로 보내기
6. DBMS와 연결에 사용했던 모든 자원에 대한 점유 해제하기


데이터베이스 엑세스 작업을 수행하는 메소드
INSERT문을 수행하는 메소드 - 새로운 데이터 저장(테이블에 새로운 행을 추가)
public void insertProduct(Product product){
	// Connection획득, PreparedStatement획득
	// ?에 값 바인딩
	// SQL문 전송
	// Connection, PreparedStatement 연결 해제
}

SELECT문을 수행하는 메소드 - 조회조건에 맞는 데이터 조회(테이블에 저장된 데이터 조회)
1. 테이블의 기본키컬럼, 고유키컬럼으로 데이터를 조회하는 경우 - 한 건의 데이터만 조회됨

2. 테이블의 기본키컬럼, 고유키컬럼이 아닌 값으로 데이터를 조회하는 경우



테이블 당 DAO하나씩 생성


**=======================데이터베이스의 특징==================================
실시간 접근을 지원
다수의 사용자 혹은 프로그램이 동시에 데이터 이용 가능
데이터에 대한 접근 용이
레코드의 주소나 위치가 아닌 내용으로 데이터를 탐색 가능
항상 최신 데이터 유지


한글 : 3byte가 한글자

내가 사용하는 db
DBMS는 Oracle Express Edition 11g
DB는 오라클 DB사용

SQL편집기 (SQL 입력/ 전송프로그램)
SQL Command Line
SQL Developer

편집기는 전송만 하고 오라클 내에서 연산 이루어진다.

조회할 때 * 쓰지말것, 키워드 하나당 한줄 바꿀것

SQl
찾고싶은 것만 적고 어떻게 찾는지는 몰라도 됨 = 선언적 프로그래밍
invalid identifier : 컬럼이름 잘못되었을 떄 뜨는 오류, 자주 생긴다.

오라클의 인덱스는 1부터 시작한다.

묵시적 형변환
  - 알아서 데이터타입이 변환됨

명시적 형변환
  숫자 -> 문자
	to_char(숫자, '패턴')
  날짜 -> 문자
	to_char(날짜)
  문자 -> 숫자  		    		'1234' -> 묵시적 형변환 되므로 잘 안쓰임
	to_number(문자, '바꿀문자의 패턴')	'12,345' -> 명시적 형변환의 대상
  문자 -> 날짜				'2021/01/04' 등은 묵시적 형변환의 대상
	to_date(문자, '패턴')	2021년 01월 04일 


등가조인 : 같은 값을 대상으로 조인시키는 것

비등가조인 : 값이 구간에 들어가는 경우를 대상으로 조인시키는 것

자체조인 : 조회하는 정보가 본인과 같은 테이블의 정보일 때 (ex. 김유신의 상사를 조회 하시오. -> 상사도 employees에 있음)
          	 같은 테이블을 두 번 적어서 조인시킨다. 그러나 역할은 달리 준다


order_by는 별칭 가능하다

포괄조인 : where절의 조건에 해당하는 부분이 null인 열에 대해서도 출력할 필요가 있을 경우
 	조건 뒤에(+)기호를 삽입하면 같이 출력해준다. 단 포괄조인은 되도록 사용 안할 수 있도록 설계하는 것이 좋으며
	성능저하가 생긴다.

ANSI조인 : 오라클 외의 다른 곳에서도 사용 가능한 join문
ex)
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, J.JOB_ID, J.JOB_TITLE
FROM EMPLOYEES E JOIN JOBS J ON E.JOB_ID = J.JOB_ID
WHERE E.DEPARTMENT_ID = 90;

-----INSERT INTO 명령어
ex)
INSERT INTO SAMPLE_BOOKS
(book_no, book_title, book_writer, book_price, book_discount_price, book_stock,book_created_date)
values
(101, '자바의정석','남궁성',35000,29000,1000,sysdate);

모든 열을 추가하며, 순서대로 쓸 경우 ()안의 요소 값 적는 줄 생략 가능
매번 반복되는 값의 경우 default sysdate 와 같이 default를 통해 지정해 줄 수 있으며,
이미 만들어진 테이블에 편집을 가할 경우는 우클릭 -> 편집 -> 기본값에서 지정해 줄 수 있다.


-----DELETE FROM 명령어
DELETE FROM 테이블명	->DELETE는 꼭 WHERE랑 쓰자, 안그럼 데이터 다날라감
WHERE BOOK_NO = 104

-----UPDATE SET 명령어
UPDATE 테이블명
SET 컬럼명 = 10000
WHERE 조건;



-----다중행 함수(=그룹함수)
 * 테이블 전체 또는 그룹화된 테이블의 행들을 의미함
  - count	 
  - sum
  - avg 
  - min
  - max
  - variance
  - stddev

 * 그룹함수 사용시 주의점
  - 그룹함수는 그룹함수가 아닌 표현식과 select절에 같이 적을 수 없다. (단, group by절에 등장한 표현식은 	그룹함수와 같이 select절에 적을 수 있다.)
  - where절에는 그룹함수를 사용할 수 없다.
  - 그룹함수의 중첩은 한번만 허용된다

 * 그룹함수에 대해 조건을 적용하고 싶으면 group by 밑에 having절을 사용한다
    having count(*) <5; (and로 조건 여러개 가능)

-----------데이터 정의어(DDL)
 * CREATE, ALTER, DROP, TRUNCATE(저장공간까지 싹 비워버림, DELETE는 저장공간은 남긴다.)


-----------주요 데이터 베이스 객체
  ㅇ 테이블
    - 데이터의 기본 저장단위, 행과 열로 구성되어 있다.
  ㅇ 뷰
    - 하나 이상의 테이블을 사용해서 만든 가상의 테이블
  ㅇ 시퀀스
    - 일련번호 생성기 (숫자 중복되지 않게)
  ㅇ 인덱스
    - 검색성능을 향상시키기 위해 데이터에 대한 색인을 가지고 있다.
  ㅇ 동의어
    - 객체에 대한 다른 이름을 제공함

 * 오라클 데이터타입 알아둘 것
github.com/eungsu -> datatype
오라클의 CHAR는 전부 문자열
VARCHAR와의 구분은 사이즈의 가변 여부
LONG은 대부분 CLOB으로 대체되는 추세이다.
BLOB : 바이너리 데이터 받아옴 -> 그림,영상,게임파일 등에 사용
ROWID :  테이블에서 행의 고유주소를 나타내는 64진수, 인덱스 역할을 함
ex) dept_no     ROWID
     10            AAE,AAAAAA,AAA
     20	        AAE,AAAAAA,AAB

 * 시퀀스
1부터 1씩 증가
무조건 다른값을 넣는 것만이 목적이기 때문에 중간에 값이 빠져도 되돌아갈 순 없다.
increment by a 적으면 a씩 증가



*서브쿼리와 조인으로 둘 다 해결되는 문제의 경우 조인으로 해결하는 것이 더 빠르다

**=======================KeyWord============================================
**문법 순서
select
from
[where 조건식]
[group by 컬럼명 혹은 표현식]
[having 조건식]
[order by 컬럼명 혹은 표현식]

select, from, where

and, or, between A and B(경계값 포함) 
-  경계값 포함여부가 헷갈릴 수 있어 부등호를 사용한 and연산을 많이 씀 
   가능한 or 연산자는 쓰지 않으며, 조건이 소수 몇개인 경우(ex. 아이디가 101, 102)

in   
-  where manager_id in(101, 102);와 같이 쓴다.
    =>or는 a이면서 b인경우의 조건을 찾을 때만 쓴다.
        and와 or를 같이 사용할 경우는 and( a or b)로 괄호를 꼭 써줘야 한다. (안쓰면 다른값)	

Like 
-  쿼리의 성능을 떨어트린다. /'='연산만 가능하기 때문에 in과 함께 쓰진 못한다.
    ex) 책제목 like '%자바%' 제목에 "자바"가 포함되어 있는 모든책
    % : 0개이상의 모든 문자 

is null
is not null

dual 
-  1행1열짜리 테이블 (오라클에서 기본 제공), 간단한 연산 결과 확인 시 사용
    ex) select 100*3 from dual; (만약에 employees였으면 employees의 행의 갯수만큼 출력이된다)

형변환은 
숫자    문자    날짜 -> 문자를 기준으로만 형변환이 가능하다.

to_char(숫자, '포맷형식') : 숫자를 지정된 포맷형식으로 변환
to_number('특정패턴의 숫자형식 문자', '패턴')
to_date()

패턴문자
9 : 숫자
0 : 숫자
$ : 달러기호
. : 소숫점
, : 자릿수



ERD(Entity Relational Diagram)
데이터간의 관계를 나타내는 그래프



**=======================오라클 내장함수=======================================================

ㅇ 단일행 함수
  - 조회된 행마다 하나의 결과를 반환
  - 중첩해서 사용가능
sysdate
-  현재날짜

round

trunc (대상 숫자, 자릿수)
-  소수점 버리기
ㅇ 다중행 함수

substr

instr

replace


ㅇ 기타함수
 nvl(null값이 예상되는 컬럼, 대체할 값)
null과 사칙연산하면 무조건null이 됨
null과 계산해야될 일이 있을 때 사용





