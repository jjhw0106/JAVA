---------------------------무결성 조약-------------------------------

테이블 정의시 제약조건 설정 가능
EX)
CREATE TABLE USERS(
	USER_ID			VARCHAR2(20) PRIMARY KEY,
	USER_NAME		VARCHAR2(20) NOT NULL,
	USER_PASSWORD		VARCHAR2(20) NOT NULL,	--NULL을 허용하지 않음
	USER_PHOTO_FILENAME	VARCHAR2(100), 		--NULL을 허용
	USER_EMAIL		VARCHAR2(100) UNIQUE,	--이메일은 중복되어선 안된다
	USER_PHONE		VARCHAR2(20) UNIQUE,
	USER_POSTAL_CODE	VARCHAR2(5) NOT NULL UNIQUE,
	USER_GENDER		CHAR(1) CHECK (USER_GENDER IN ('F','M')),
	USER_ID			VARCHAR2(20) CHECK (USER_GRADE IN ('일반','로얄','골드')
);

ㅇ NOT NULL 제약조건
	- 해당 컬럼에 NULL값이 입력되지 못하게 함  (EX.  USER-ID VARCHAR2(20) NOT NULL) -- NULL을 허용하지 않음
	- 테이블에 여러 번 지정할 수 있다.

ㅇ UNIQUE 고유키 제약조건
	- 해당 컬럼의 값은 테이블전체에서 고유한 값이어야 한다.
	- NULL이 여러 행에 중복 입력되는 것은 허용한다.
	- 테이블에 여러 번 지정할 수 있다. 

ㅇ PRIMARY KEY 기본키 제약조건
	- 해당 컬럼의 값은 NULL이 허용되지 않으며, 테이블 전체에서 고유한 값이어야 한다.
	- 테이블 당 하나만 지정할 수 있다.
	- 테이블에서 행을 대표하는 컬럼에 지정한다.

ㅇ CHECK 제약조건
	- 해당 컬럼의 값은 제약조건에서 지정한 조건식을 만족하는 값만 허용된다.
	- 테이블에 여러 번 지정할 수 있다.

ㅇ FOREIGN KEY
	- 해당 컬럼의 값은 다른 테이블 혹은 같은 테이블의 특정 컬럼이 가지고 있는 값만 허용된다.

--------------------------------------------------------------------
ㅇ 실행계획
파라미터를 포함한 쿼리문이 올 경우 동일한 쿼리에 대해 실행계획을 반복해서 짤 필요가 없다





--------------------------------------------------------------------
ㅇ 분석함수
  1. TOP-N분석과 분석함수 사용하기
    -- 월급에 대한 내림차순으로 정렬했을 때,
    -- 급여를 가장 많이 받은 사람 3명의 아이디, 이름, 급여 조회하기
	SELECT ROWNUM, EMPLOYEE_ID, FIRST_NAME, SALARY
	FROM(SELECT EMPLOYEE_ID, FIRST_NAME, SALARY
	         FROM EMPLOYEES
	         ORDER BY SALARY DESC)
	WHERE ROWNUM<=3;
  2.
    -- 
  3.
    -- 

--------------------------------------------------------------------
ㅇ트랜잭션 : 수행되는 명령어의 최소단위
시작 : 첫번째 DML이 시작하는 순간 자동으로 시작됨
  - COMMIT : 트랜잭션 내의 DML 실행결과를 데이터베이스에 반영한다.
  - ROLLBACK : 트랜잭션 내의 DML 실행결과의 데이터베이스 반영을 전부 취소한다.
//트랜잭션 시작
INSERT INTO ORDERS VALUES (?, ?, ?)				//주문정보 저장
INSERT INTO ITEMS VALUES(?, ?, ?)				//주문상품정보 저장
INSERT INTO ORDER_DELIVERY VALUES(?, ?, ?, ?) 		//배송정보 저장
INSERT INTO ORDER_PAY VALUES(?, ?, ?, ?) 			//결재정보 저장
UPDATE PRODUCTS SET PRODUCT_STOCK = ? WHERE		//재고변경
UPDATE CUSTOMER SET CUST_POINT = ? WHERE		//적립포인트 변경
COMMIT;	  //즉시 트랜잭션 종료




