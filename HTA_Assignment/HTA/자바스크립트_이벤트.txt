
Document에서 Element를 찾고 어떤 이벤트일 때 어떤 이벤트 핸들러를 통해 이벤트를 발생시킬지를 잘 선택해야 한다.
- 이벤트 이름은 모두 소문자로 쓴다
- 웹페이지 안에서 이벤트 이름은 모두 on으로 시작한다.

JavaScript Event
	- Event(이벤트)
		* HTML 엘리먼트(태그)에서 생겨나는 것
		* 이벤트가 생기는 원인
			- 웹 페이지의 로딩이 완료됐을 때
			- 입력필드의 값이 변경될 때
			- 사용자가 버튼을 클릭했을 때
			- 사용자가 마우스을 움직일 때
			- 사용자가 키보드를 입력할 때
			- 사용자가 브라우저 창의 크기를 조절할 때
			- 사용자가 html문서를 스크롤할 때
		* 이벤트의 처리
			- 이벤트 발생이 예상되는 엘리먼트를 선정한다.
			- 해당 엘리먼트에서 발생이 예상되는 이벤트를 선정한다.
			- 해당 엘리먼트에서 발생이 예상되는 이벤트가 발생했을 때 실행될 함수를 구현한다.
			- 해당 엘리먼트와 이벤트 발생시 실행될 함수를 바인딩한다.
			* 이벤트 처리를 통해서 사용자와 상호작용하는 웹 페이지를 제작할 수 있다.
	- Event의 종류
		- 마우스 이벤트
		      * - onclick			엘리먼트를 클릭했을 때
			- ondbclick		엘리먼트를 더블 클릭했을 때
			- onmouseover		엘리먼트 위로 마우스가 움직일 때
			- onmouseout		엘리먼트 밖으로 마우스가 움직일 때
		      * - onmousenter		엘리먼트 위로 마우스가 움직일 때
		      * - onmouseleave		엘리먼트 밖으로 마우스가 움직일 때
			- onmousemove		엘리먼트 위에서 마우스가 움직일 때
			- onmousedown		엘리먼트에서 마우스의 버튼을 눌렀을 때
			- onmouseup		엘리먼트에서 마우스의 버튼을 뗐을 때

		- 키보드 이벤트
			- onkeydown		엘리먼트에서 키보드 키를 누르고 있을 때
			- onkeypress		엘리먼트에서 키보드 키가 완전히 눌려졌을 때
		      * - onkeyup			엘리먼트에서 키보드 키가 위로 올라올 때

		- 폼 이벤트 (<form>태그 내의 엘리먼트에서 발생하는 이벤트)
		      * - onfocus		폼 입력요소가 포커스를 획득했을 때
		      * - onblur		폼 입력요소가 포커스를 잃었을 때
		      * - onchange		폼 입력요소의 값이 변경될 때
			- onselect		폼 입력요소의 텍스트를 선택했을 때
			- onreset		폼의 리셋버튼이 클릭됐을 때
		      * - onsubmit		폼이 서버로 제출될 때

		- 윈도우 이벤트
		      * - onload		브라우져가 페이지의 로딩을 끝마쳤을 때
			- onresize		브라우져의 윈도우 크기가 변경될 때
			- onerror		자바스크립트 실행 중 에러가 발생했을 때
	- Event 객체
		* 웹페이지나 엘리먼트에서 이벤트가 발생할 때 마다 생겨나는 객체
		* 이벤트 객체의 주요 API
			- 프로퍼티(Property)
			      * target		: 이벤트가 발생된 엘리먼트를 반환한다.
				type		: 발생한 이벤트의 이름을 반환한다.
				which		: 마우스이벤트나 키보드이벤트가 발생했을 때
						  클릭한 마우스 번트의 번호, 입력한 글자의 유니코드값을 반환한다.
			- 메소드(Method)
				* preventDefault()		
					* 이벤트가 발생했을 때 그 이벤트와 관련된 기본동작의 실행을 취소시킨다.
					* 대표적인 예
						* "submit"버튼을 클릭했을 때 폼의 입력값이 서버로 제출되는 것을 취소할 수 있다.
						* "a" 링크를 클릭했을 때 해당 url로 이동하는 것을 취소할 수 있다.
				* stopPropagation()	
					* 이벤트 버블링 차단한다.
				stopImmediatePropagation()
					* 이벤트 버블링을 차단하고, 
                                          해당 엘리먼트에 동일한 이벤트를 발생시 실행할 다른 함수를 실행도 즉시 중지한다.
				* 이벤트 버블링
					- 이벤트가 발생하면 해당 엘리먼트의 부모 엘리먼트로 이벤트가 전파되는 것을
					  이벤트 버블링이라고 한다.
	- 주요 이벤트의 활용
		* onclick 이벤트
			- button, a, img, div 등의 엘리먼트를 클릭할 때 정의된 함수가 실행되도록 한다.
			- 가장 많이 활용되는 이벤트다.
			- 꼭, button이나 a가 아니어도 상관없다. 어떤 종류에 엘리먼트던지 onclick이벤트 발생시
			  실행될 함수를 연결지을 수 있다.
		* onmouseenter, onmouseleave 이벤트
			- 마우스 포인트가 특정 엘리먼트 영역으로 진입하거나 빠져나올 때 정의된 함수가 실행되도록 한다.
			- 주 메뉴에 마우스가 진입하면 서브 메뉴가 나오게 하거나,
			  그림위에 마우스가 진입하면 그림에 대한 설명이나 소개가 나오게 하는 등,
			  특정 엘리먼트에 진입했을 때 즉시 부가적인 정보나 추가정보가 표출되도록할 때 사용한다.
		* onkeyup 이벤트
			- 키보드로 글자를 입력할 때 정의된 함수가 실행되도록한다.
			- 텍스트필드, 비밀번호필드, textarea에서 값을 입력할 때마다 값을 읽어와서 추가적인 작업을
			  수행할 때 주로 사용한다.
			- 아이디 필드에 지정된 문자외의 문자을 사용하는지 체크하거나,
			  숫자만 입력해야하는 필드에 숫자외의 다른 문자를 입력하는지 체크하는 작업을 수행할 수 있다.
		* onchange
			- 폼 입력요소의 입력값이 변경될 때 정의된 함수가 실행된다.
			- radio, chekbox의 체크된 항목을 바꾸나, select의 선택된 항목을 바꿀때 마다 작업을 수행할 수 있다.
			- input, textarea등은 최종적으로 입력한 값이 이전 입력값과 비교했을 때 달라진 부분이 있으면 
			  해당 메소드가 실행된다.


 
